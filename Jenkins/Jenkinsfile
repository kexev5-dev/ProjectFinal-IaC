pipeline {
    agent {
        docker {
            image 'node:20'   // Usamos Node para build y tests
            args '-v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    environment {
        BACKEND_IMAGE = "mi_backend:latest"
        FRONTEND_IMAGE = "mi_frontend:latest"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/kexev5-dev/ProjectFinal-IaC.git'
            }
        }

        stage('Build Backend') {
            when {
                branch 'master'
            }
            steps {
                dir('backend') {
                    sh 'npm install'
                    sh 'npm test'   // üö® Falla el pipeline si los tests no pasan
                }
            }
        }

        stage('Build Frontend') {
            when {
                branch 'master'
            }
            steps {
                dir('frontend') {
                    sh 'npm install'
                    sh 'npm run build'
                }
            }
        }

        stage('Deploy Backend y Frontend') {
            when {
                branch 'master'
            }
            agent any   // üëà Este stage se ejecuta en el host con Docker instalado
            steps {
                dir('.') {  // Cambia '.' si tu docker-compose.yml no est√° en la ra√≠z
                    sh '''
                      echo "Levantando servicios con Docker Compose..."
                      docker compose down
                      docker compose up -d --build
                    '''
                }
            }
        }
    }

    post {
        success {
            echo '‚úÖ Pipeline finalizado correctamente. Backend y Frontend actualizados!'
        }
        failure {
            echo '‚ùå Algo fall√≥ en el pipeline. Revisa los logs!'
        }
        always {
            echo '‚ÑπÔ∏è Pipeline terminado.'
        }
    }
}
